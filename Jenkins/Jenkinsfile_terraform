pipeline {
  agent any

  environment {
    TF_DIR = 'Terraform'
    AWS_ACCESS_KEY_ID = credentials('aws-access-key-id')
    AWS_SECRET_ACCESS_KEY = credentials('aws-secret-access-key')
  }

  stages {
    stage('Clean Workspace') {
      steps {
        deleteDir()
      }
    }

    stage('Checkout') {
      steps {
        checkout scm
      }
    }
    stage('Debug Workspace') {
    steps {
        dir("${TF_DIR}"){
        sh 'ls -la'
        sh 'pwd'
    }
    }
}
    stage('Check for Terraform Changes') {
      steps {
        script {
          def changes = sh(script: "git diff --name-only HEAD~1 HEAD", returnStdout: true).trim()
          echo "Changed files:\n${changes}"

          if (changes.split('\n').any { it.startsWith("${TF_DIR}/") }) {
            echo "Terraform changes detected."
            currentBuild.description = "Terraform apply triggered"
            env.TF_CHANGED = "true"
          } else {
            echo "No Terraform changes. Skipping."
            env.TF_CHANGED = "false"
          }
        }
      }
    }

    stage('Terraform Init') {
      when {
        expression { return env.TF_CHANGED == "true" }
      }
      steps {
        dir("${TF_DIR}") {
          sh 'terraform init'
        }
      }
    }
    
    stage('Terraform Validate'){
          when {
        expression { return env.TF_CHANGED == "true" }
      }
      steps {
        dir("${TF_DIR}") {
          sh 'terraform validate'
        }
      }
    }

    stage('Terraform Plan') {
      when {
        expression { return env.TF_CHANGED == "true" }
      }
      steps {
        dir("${TF_DIR}") {
          sh 'terraform plan -out=tfplan'
        }
      }
    }

    stage('Terraform Apply') {
      when {
        expression { return env.TF_CHANGED == "true" }
      }
      steps {
        dir("${TF_DIR}") {
          sh 'terraform apply -auto-approve tfplan'
        }
      }
    }
  }
}